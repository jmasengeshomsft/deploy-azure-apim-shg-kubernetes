name: 'DeployToDoAPI'

on: workflow_dispatch

env:
  AZURE_CONTAINER_REGISTRY: "jmdevacr001"
  RGISTRY_RESOURCE_GROUP: "jm-shared-core-rg"
  CONTAINER_NAME: "todo-api"
  RESOURCE_GROUP: "jm-dev-aks-rg"
  CLUSTER_NAME: "jm-dev-cluster"
  DEPLOYMENT_MANIFEST_PATH: "./sample-apis/TodoAPI/k8s"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          # client-id: ${{ secrets.AZURE_OIDC_CLIENT_ID }}
          # tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id: ${{ secrets.AZURE_SUB_ID }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          az acr build --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.RGISTRY_RESOURCE_GROUP }} .

  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    # needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          # client-id: ${{ secrets.AZURE_OIDC_CLIENT_ID  }}
          # tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # subscription-id: ${{ secrets.AZURE_SUB_ID }}

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          resource-group: jm-dev-aks-rg
          name: jm-dev-cluster
          namespace: 'conference-gw'
          private-cluster: true
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          # manifests: |
          #     ./kubernetes/gateway/namespace.yaml
          #     ./kubernetes/gateway/gw-deployment.yaml
          #     ./kubernetes/gateway/gw-configmap.yaml
          #     ./kubernetes/gateway/gw-service.yaml
          #     ./kubernetes/gateway/gw-discovery-service.yaml

          images: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
