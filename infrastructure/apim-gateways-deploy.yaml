trigger: none

variables:
   - name: RUN_FLAG_TERRAFORM
     value: 'Any branch'
   - name: tf_working_dir
     value: '$(System.DefaultWorkingDirectory)/infrastructure'
   - name: NugetSecurityAnalysisWarningLevel
     value: None
   - name: state_container
     value: 'landing-zone-state'
   - group: jm-fy23-landing-zone

stages:
## FOR DEV ##
- template: ../templates/terraform-stages-template.yml
  parameters:
    environment: dev
    stageVariableGroup: jm-fy23-landing-zone
    environmentDisplayName: Dev
    # TerraformArguments: >-
    #   -var application=noneho
    # Terraform recognizes TF_VAR prefixed environment variables
    TerraformEnvVariables:
      TF_VAR_app_name_prefix: $(app_name_prefix)
      TF_VAR_default_location: $(default_location) 

      TF_VAR_sre_rg: $(sre_rg)
      TF_VAR_sre_vnet_name: $(sre_vnet_name)
      # TF_VAR_hub_vnet_address_space: $(hub_vnet_address_space)
      # TF_VAR_spoke_vnet_address_space: $(spoke_vnet_address_space)
      TF_VAR_networking_resource_group_name : $(networking_resource_group_name)
      # TF_VAR_spoke_networking_resource_group_name : $(spoke_networking_resource_group_name)
      TF_VAR_spoke_virtual_network_name : $(spoke_virtual_network_name)
      # TF_VAR_management_resource_group_name : $(management_resource_group_name)
      TF_VAR_hub_vnet_name : $(hub_vnet_name)
      TF_VAR_spoke_vnet_name : $(spoke_vnet_name)
      # TF_VAR_aks_subnet_name : $(aks_subnet_name)
      # TF_VAR_private_link_subnet_name : $(private_link_subnet_name)
      # TF_VAR_aks_cluster_name: $(aks_cluster_name)
      # TF_VAR_default_pool_max_pods : $(default_pool_max_pods)
      # TF_VAR_default_vm_size : $(default_vm_size)
      # TF_VAR_default_node_count : $(default_node_count)
      # TF_VAR_workload_pool_max_pods : $(workload_pool_max_pods)
      # TF_VAR_workload_vm_size : $(workload_vm_size)
      # TF_VAR_workload_node_count : $(workload_node_count)
      # TF_VAR_workspace_name  : $(workspace_name)
      # TF_VAR_aad_tenant_id : $(aad_tenant_id)
      # TF_VAR_azure_aad_admin_group_id : $(azure_aad_admin_group_id)
      # TF_VAR_workspace_resource_group_name : $(workspace_resource_group_name)
      # TF_VAR_cluster_resource_group_name: $(cluster_resource_group_name)
      # TF_VAR_acr_name : $(acr_name) 
      # TF_VAR_csi_key_vault_name: $(csi_key_vault_name)
      # TF_VAR_tls_key_vault_name : $(tls_key_vault_name)
      # TF_VAR_tls_key_vault_resource_group : $(tls_key_vault_resource_group)
      # TF_VAR_file_share_storage_name : $(file_share_storage_name)
# - stage: Install_Flux
#   displayName: Install Flux - Dev
#   variables:
#    - group: leanovated-primary-spoke
#    - name: azureServiceConnection
#      value: jmasengesho-internal-subscription
#   jobs:
#   - job: Install_Flux
#     displayName: Install Flux
#     condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'), variables['RUN_FLAG_TERRAFORM']))
#     pool:
#       vmImage: 'leanovated-sre-agent-linux'
#       name: Default

#     steps:
#     - task: AzureCLI@2
#       displayName: Check Flux Installation
#       inputs:
#         azureSubscription: jmasengesho-internal-subscription
#         scriptType: bash
#         scriptLocation: inlineScript
#         inlineScript: |
#           az --version
#           az extension add --name k8s-extension
#           az config set extension.use_dynamic_install=yes_without_prompt
#           az k8s-extension create -g '$(app_name_prefix)-$(cluster_resource_group_name)' -c '$(app_name_prefix)-$(aks_cluster_name)' -t  managedClusters --name flux --extension-type microsoft.flux --config image-automation-controller.enabled=false image-reflector-controller.enabled=false

# # FOR DR #  
# - template: ../templates/terraform-stages-template.yml
#   parameters:
#     environment: dr
#     environmentDisplayName: Dr
#     stageVariableGroup: leanovated-dr-spoke
#     # TerraformArguments: >-
#     #  -var application=noneho
#     TerraformEnvVariables:
#       TF_VAR_app_name_prefix: $(app_name_prefix)
#       TF_VAR_default_location: $(default_location) 
#       TF_VAR_networking_resource_group_name : $(networking_resource_group_name)
#       TF_VAR_spoke_networking_resource_group_name : $(spoke_networking_resource_group_name)
#       TF_VAR_spoke_virtual_network_name : $(spoke_virtual_network_name)
#       TF_VAR_management_resource_group_name : $(management_resource_group_name)
#       TF_VAR_hub_virtual_network_name : $(hub_virtual_network_name)
#       TF_VAR_aks_subnet_name : $(aks_subnet_name)
#       TF_VAR_private_link_subnet_name : $(private_link_subnet_name)
#       TF_VAR_aks_cluster_name: $(aks_cluster_name)
#       TF_VAR_default_pool_max_pods : $(default_pool_max_pods)
#       TF_VAR_default_vm_size : $(default_vm_size)
#       TF_VAR_default_node_count : $(default_node_count)
#       TF_VAR_workload_pool_max_pods : $(workload_pool_max_pods)
#       TF_VAR_workload_vm_size : $(workload_vm_size)
#       TF_VAR_workload_node_count : $(workload_node_count)
#       TF_VAR_workspace_name  : $(workspace_name)
#       TF_VAR_aad_tenant_id : $(aad_tenant_id)
#       TF_VAR_azure_aad_admin_group_id : $(azure_aad_admin_group_id)
#       TF_VAR_workspace_resource_group_name : $(workspace_resource_group_name)
#       TF_VAR_cluster_resource_group_name: $(cluster_resource_group_name)
#       TF_VAR_acr_name : $(acr_name) 
#       TF_VAR_csi_key_vault_name: $(csi_key_vault_name)
#       TF_VAR_tls_key_vault_name : $(tls_key_vault_name)
#       TF_VAR_tls_key_vault_resource_group : $(tls_key_vault_resource_group)
#       TF_VAR_file_share_storage_name : $(file_share_storage_name)

